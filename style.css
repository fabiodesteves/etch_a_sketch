body {
  display: flex;
  flex-direction: column; /* Stack input area and grid vertically */
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  margin: 0;
}

.input-container {
  margin-bottom: 20px; /* Add some space between input area and grid */
  text-align: center; /* Center the content inside input-container */
}

label {
  display: block; /* Put label on its own line */
  margin-bottom: 5px;
}

input[type="number"] { /* Style the number input */
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  width: 60px; /* Adjust width as needed */
}

button { /* Style the button */
  padding: 8px 15px;
  background-color: #4CAF50; /* Green button */
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

button:hover { /* Hover effect for button */
  background-color: #45a049;
}


#squares-container {
  display: flex; /* Make the container a flex container */
  flex-direction: column; /* Arrange rows in a column */
  border: 1px solid black; /* Optional: Add a border to the grid container */
  width: 480px; /* Adjust as needed for the total width of the grid */
  height: 480px; /* Adjust as needed for the total height of the grid */
  align-self: center;
}

.line-of-squares {
  display: flex; /* Make each row a flex container */
  flex: 1; /* Allow rows to take equal height within the container */
}

.square {
  flex: 1; /* Allow squares to take equal width within the row */
  border: 1px solid lightgray; /* Optional: Add borders to squares for visibility */
  box-sizing: border-box; /* Include border in the square's dimensions */
  background-color: white; /* Default square color */
}